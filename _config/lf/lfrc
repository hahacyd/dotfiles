# lf settings

set shellopts '-eu'
set ifs "\n"

# set color256
set color
set icons
set hidden
set incsearch
set scrolloff 4
set tabstop 2
set smartcase
set dircounts
set info size
set sortby natural
set ratios '1:2:3'
set timefmt '2006-01-02 15:04:05 -0700'
set previewer '~/.config/lf/preview'

# Secure logs and socket
# ${{
#      if [ -S "${TMPDIR:-/tmp/}lf.${USER}.sock" ]; then
#              chmod o-rwx "${TMPDIR:-/tmp/}lf.${USER}."*
#      fi
# }}

# keyboard mappings
# ---

# general utilities
map i $LESS='-iWQMXR~' bat --paging=always --theme=TwoDark "$f"
map I push A<c-a>
map D trash
map . set hidden!

# create directory/file
map ad push $mkdir<space>
map af push $touch<space>
map au !du -hsx * | sort -rh | less

# Quickly locate a file with fzf and select it in lf
map gf $lf -remote "send $id select $(fzf)"

# map <esc> unselect; clear
map zz push :z<space>

map sn :{{ set sortby natural; set info size; set preview; }}
map sa :{{ set sortby natural; set info size; set nopreview; set ratios 3:5; }}
map ss :{{ set sortby size; set info size; set preview; }}
map st :{{ set sortby time; set info time; set preview; }}

# Tmux
map sg &tmux split-window -h lf
map sv &tmux split-window -v lf

# execute current file (must be executable)
map X !$f

# directory aliases
map gv cd ~/.config/nvim
map gc cd ~/.config
map gm cd /mnt
map g/ cd /
map g~ cd ~

# commands
# ---

cmd mkdir %[ -n "${1}" ] && mkdir -p ${@} || echo "Argument needed"
cmd mkfile %[ -n "${1}" ] && touch ${@} || echo "Argument needed"

# Implement trash command
cmd trash ${{
	set -f
	if hash trash-put 2>/dev/null; then
		trash-put -v -- $fx
	else
		mkdir -p "$HOME"/.trash
		mv -vi $fx "$HOME"/.trash
	fi
}}

# Replace open command with robust selection of openers
cmd open ${{
	case $(file --dereference --mime-type $f -b) in
		inode/x-empty) $EDITOR $fx ;;
		text/*) $EDITOR $fx;;
		video/*) nohup mpv $fx > /dev/null & ;;
		audio/*) nohup mpv $fx > /dev/null & ;;
		audio/midi) timidity $fx ;;
		application/epub+zip) nohup FBReader $f > /dev/null & ;;
		application/pdf) nohup zathura $f > /dev/null & ;;
		*) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
	esac
}}

# quickly cd into frecent directories using zoxide, zlua or rupa/z
cmd z ${{
	set +u
	dest=''
	if hash zoxide 2>/dev/null; then
		dest="$(zoxide query "$@")"
	fi

	if test -n "${dest}"; then
		lf -remote "send $id cd '${dest}'"
	else
		lf -remote "send $id echo 'Invalid directory ${dest}'"
	fi
}}

cmd fzf_z ${{
	sel="$(zoxide query -l | fzf +s)"
	[ -d "$sel" ] && lf -remote "send $id cd \"$sel\""
}}

cmd on-cd &{{
	zoxide add "$PWD"
}}
on-cd

# dynamically set info displayed based on the number of columns
cmd resize %{{
	w=$(tmux display-message -p '#{pane_width}' || tput cols)
	# w=$(tput cols)
	if [ $w -le 62 ]; then
		lf -remote "send $id set ratios 1:4"
		lf -remote "send $id set nopreview"
	elif [ $w -le 80 ]; then
		lf -remote "send $id set ratios 1:2:2"
	elif [ $w -le 100 ]; then
		lf -remote "send $id set ratios 1:2:3"
	else
		lf -remote "send $id set ratios 2:4:5"
	fi
	# lf -remote "send $id echo 'ui adjusted for width of $w'"
}}
resize

cmd bulk-rename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	if [ -n "${fs}" ]; then
		echo "$fs" > $index
	else
		echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
	fi
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
	cat $index > $index_edit
	$EDITOR $index_edit
	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		max=$(($(cat $index | wc -l)+1))
		counter=1
		while [ $counter -le $max ]; do
			a="$(cat $index | sed "${counter}q;d")"
			b="$(cat $index_edit | sed "${counter}q;d")"
			counter=$(($counter+1))
			
			[ "$a" = "$b" ] && continue
			[ -e "$b" ] && echo "File exists: $b" && continue
			mv "$a" "$b"
		done
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

#  vim: set ts=2 sw=2 tw=80 noet:
